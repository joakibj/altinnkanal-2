buildscript {
    ext.kafka_test_version = '0.5.3'
    ext.mockito_version = '2.15.0'
    ext.kotlin_version = '1.2.21'
    ext.confluent_version = '4.0.0'
    ext.cxf_version = '3.2.0'
    ext.kafka_version = '1.0.0'
    ext.spring_boot_version = '1.5.10.RELEASE'
    ext.spring_kafka_test_version = '2.1.0.RELEASE'
    ext.jackson_version = '2.9.4'
    ext.prometheus_version = '0.2.0'
    ext.logstash_encoder_version = '4.10'

    repositories {
        mavenCentral()
        maven {
            name "JCenter Gradle Plugins"
            url "https://dl.bintray.com/gradle/gradle-plugins"
        }
    }

    dependencies {
        classpath 'no.nils:wsdl2java:0.10'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'no.nils.wsdl2java'
apply plugin: 'application'
apply plugin: 'kotlin'

mainClassName = 'no.nav.altinnkanal.BootstrapROBEAKt'
applicationDefaultJvmArgs = ['-Djavax.net.ssl.trustStore=${NAV_TRUSTSTORE_PATH} -Djavax.net.ssl.trustStorePassword=${NAV_TRUSTSTORE_PASSWORD}']

startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('\\${NAV_TRUSTSTORE_PATH}', '${NAV_TRUSTSTORE_PATH}')
        unixScript.text = unixScript.text.replace('\\${NAV_TRUSTSTORE_PASSWORD}', '${NAV_TRUSTSTORE_PASSWORD}')
        windowsScript.text = windowsScript.text.replace('${NAV_TRUSTSTORE_PATH}', '%NAV_TRUSTSTORE_PATH%')
        windowsScript.text = windowsScript.text.replace('${NAV_TRUSTSTORE_PASSWORD}', '%NAV_TRUSTSTORE_PASSWORD%')
    }
}

wsdl2java {
    wsdlDir = file("src/main/resources")
    wsdlsToGenerate = [
            ["$projectDir/src/main/resources/OnlineBatchReceiver.wsdl"]
    ]
}

test {
    testLogging.showStandardStreams = true
}

repositories {
    maven {
        name 'Confluent maven repo'
        url 'http://packages.confluent.io/maven/'
    }

    maven {
        name 'iApp Nexus 3 server - releases'
        url 'https://repo.adeo.no/repository/maven-releases/'
    }
}

configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation project(':altinnkanal-schemas')
    implementation "io.confluent:kafka-avro-serializer:$confluent_version"
    implementation "org.apache.kafka:kafka-clients:$kafka_version"
    implementation "org.apache.kafka:kafka_2.12:$kafka_version"
    implementation "org.apache.cxf:cxf-spring-boot-starter-jaxws:$cxf_version"
    implementation "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-jetty:$spring_boot_version"
    implementation "org.springframework.boot:spring-boot-starter-security:$spring_boot_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    implementation "io.prometheus:simpleclient_spring_boot:$prometheus_version"
    implementation "io.prometheus:simpleclient_hotspot:$prometheus_version"
    implementation "net.logstash.logback:logstash-logback-encoder:$logstash_encoder_version"

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"
    testImplementation "org.springframework.boot:spring-boot-test-autoconfigure:$spring_boot_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    testImplementation "no.nav.common:embedded.kafka:$kafka_test_version"
}
